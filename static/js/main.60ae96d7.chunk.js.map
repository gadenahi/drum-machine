{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Drumpad","props","handleKeyDown","e","keyCode","sound","document","getElementById","keyTrigger","play","currentTime","handleKey","clipId","handleClick","addEventListener","this","window","focus","removeEventListener","className","onClick","id","ref","src","clip","React","Component","App","state","power","bank","sliderVal","display","currentPadBank","keyHeaterKit","currentPadBankId","bind","handlePower","handleBank","handleSound","name","setState","keySmoothPianoKit","target","value","Math","round","padBank","slice","call","getElementsByClassName","forEach","volume","map","key","url","onClickPower","text","onClickVolume","onClickBank","Powerswitch","type","Volume","min","max","step","onChange","Display","Bankswitch","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.60ae96d7.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass Drumpad extends React.Component {\n  constructor(props){\n    super(props);\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeyDown)\n    window.focus()\n  }\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyDown)\n  }\n\n  \n  handleKeyDown = (e) => {\n    if(e.keyCode === this.props.keyCode) {\n      const sound = document.getElementById(this.props.keyTrigger);\n      sound.play()\n      sound.currentTime = 0\n      this.props.handleKey(this.props.clipId)      \n    }\n  }\n  \n  handleClick = () => {\n    const sound = document.getElementById(this.props.keyTrigger);\n    sound.play()\n    sound.currentTime = 0\n    this.props.handleKey(this.props.clipId)\n   }\n\n  \n  \n  render() {\n  return (\n      <button className=\"drum-pad\" onClick={this.handleClick} id={this.props.clipId}>\n      <h1>{this.props.keyTrigger}</h1>\n      <audio \n        ref={ref => this.sound = ref}\n        className='clip' \n        id={this.props.keyTrigger} \n        src={this.props.clip}>\n      </audio>\n      </button>\n  )\n  }   \n}\n\nclass App extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      power: false, \n      bank: false,\n      sliderVal: 0.3,\n      display: '',\n      currentPadBank: keyHeaterKit,\n      currentPadBankId: 'Heater Kit'\n    }\n    this.handleKey = this.handleKey.bind(this)\n    this.handlePower = this.handlePower.bind(this)\n    this.handleBank = this.handleBank.bind(this)\n    this.handleSound = this.handleSound.bind(this)\n  }\n  handleKey(name) {    \n    this.setState({\n      display: name\n    });    \n  }\n  handlePower() {\n    this.setState({\n      power: !this.state.power\n    });    \n  }\n  handleBank() {\n    if (this.state.power) {\n      this.state.currentPadBankId === 'Heater Kit' ?\n        this.setState({\n          currentPadBank: keySmoothPianoKit,\n          display: 'Smooth Piano Kit',\n          currentPadBankId: 'Smooth Piano Kit',\n        }) :\n        this.setState({\n          currentPadBank: keyHeaterKit,\n          display: 'Heater Kit',\n          currentPadBankId: 'Heater Kit',\n        });\n    }\n  }\n  handleSound(e) {\n    if (this.state.power) {\n    this.setState({\n      sliderVal: e.target.value,\n      display: \"Volume:\" + Math.round(e.target.value * 100)\n    });    \n    }\n  }\n  render() {\n    const clips = [].slice.call(document.getElementsByClassName('clip'));\n    clips.forEach(sound => {\n      sound.volume = this.state.sliderVal\n    });\n    \n    let padBank;\n    this.state.power ?\n      padBank = this.state.currentPadBank.map((key) => {\n      return (\n           <Drumpad \n\t\t\t\t\tclipId={key.id} \n\t\t\t\t\tclip={key.url}\n\t\t\t\t\tkeyTrigger={key.keyTrigger}\n\t\t\t\t\tkeyCode={key.keyCode}           \n          power={this.state.power}\n          currentPadBank={this.state.currentPadBank}\n          handleKey={this.handleKey} />\n      )\n    }) :\n      padBank = this.state.currentPadBank.map((key) => {\n      return (\n           <Drumpad \n\t\t\t\t\tclipId=\"\"\n\t\t\t\t\tclip=\"#\"\n\t\t\t\t\tkeyTrigger={key.keyTrigger}\n\t\t\t\t\tkeyCode={key.keyCode}           \n          power={this.state.power}\n          currentPadBank={this.state.currentPadBank}\n          handleKey={this.handleKey} />\n      )\n    })                                               \n    \n    return (\n      <div id=\"drum-machine\">\n        <div className=\"drum-pad-area\">          \n          {padBank} \n        </div>               \n        <div className=\"display-area\">\n          <Powerswitch\n            onClickPower={this.handlePower}\n            text=\"Power\" />\n          <Volume\n            onClickVolume={this.handleSound}\n            />\n          <Display\n            display={this.state.display} />     \n          <Bankswitch\n            onClickBank={this.handleBank}\n            text=\"Bank\" />         \n        </div>\n      </div>    \n    )\n  }\n};\n\n\n\nconst Powerswitch = (props) => {\n  return (\n    <div className=\"switch\">\n      <span className=\"switch-title\">{props.text}</span>\n      <div className=\"select\" >\n      <label className=\"switch__label\">\n        <input type=\"checkbox\" className=\"switch__input\" onClick={props.onClickPower}/>\n          <span className=\"switch__content\"></span>\n          <span className=\"switch__circle\"></span>\n      </label>\n      </div>\n    </div>\n  )\n}\n\nconst Volume = (props) => {\n  return(\n    <div className=\"volume\">\n      <input type=\"range\" min=\"0\" max=\"1\" step=\"0.01\" value={props.sliderVal} onChange={props.onClickVolume} />\n    </div>\n  )\n}\n\nconst Display = (props) => {                                      \n  return (\n    // <div id=\"display\">{props.display}</div>  \n    <div id=\"display\"><h3>{props.display}</h3></div>\n  )\n}\n\nconst Bankswitch = (props) => {\n  return (\n    <div className=\"switch\" >\n      <span className=\"switch-title\">{props.text}</span>\n      <div className=\"select\" >\n      <label className=\"switch__label\" >\n        <input type=\"checkbox\" className=\"switch__input\" onClick={props.onClickBank}/>\n          <span className=\"switch__content\"></span>\n          <span className=\"switch__circle\"></span>\n      </label>\n      </div>\n    </div>\n  )\n}\n\n\n\nconst keyHeaterKit = [{\n    keyCode: 81,\n    keyTrigger: 'Q',\n    id: 'Heater-1',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3'\n  }, {\n    keyCode: 87,\n    keyTrigger: 'W',\n    id: 'Heater-2',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3'\n  }, {\n    keyCode: 69,\n    keyTrigger: 'E',\n    id: 'Heater-3',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3'\n  }, {\n    keyCode: 65,\n    keyTrigger: 'A',\n    id: 'Heater-4',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3'\n  }, {\n    keyCode: 83,\n    keyTrigger: 'S',\n    id: 'Clap',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3'\n  }, {\n    keyCode: 68,\n    keyTrigger: 'D',\n    id: 'Open-HH',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3'\n  }, {\n    keyCode: 90,\n    keyTrigger: 'Z',\n    id: \"Kick-n'-Hat\",\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3'\n  }, {\n    keyCode: 88,\n    keyTrigger: 'X',\n    id: 'Kick',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3'\n  }, {\n    keyCode: 67,\n    keyTrigger: 'C',\n    id: 'Closed-HH',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3'\n  },\n];\n\nconst keySmoothPianoKit = [{\n  keyCode: 81,\n  keyTrigger: 'Q',\n  id: 'Chord-1',\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3'\n}, {\n  keyCode: 87,\n  keyTrigger: 'W',\n  id: 'Chord-2',\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3'\n}, {\n  keyCode: 69,\n  keyTrigger: 'E',\n  id: 'Chord-3',\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3'\n}, {\n  keyCode: 65,\n  keyTrigger: 'A',\n  id: 'Shaker',\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3'\n}, {\n  keyCode: 83,\n  keyTrigger: 'S',\n  id: 'Open-HH',\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3'\n}, {\n  keyCode: 68,\n  keyTrigger: 'D',\n  id: 'Closed-HH',\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3'\n}, {\n  keyCode: 90,\n  keyTrigger: 'Z',\n  id: 'Punchy-Kick',\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3'\n}, {\n  keyCode: 88,\n  keyTrigger: 'X',\n  id: 'Side-Stick',\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3'\n}, {\n  keyCode: 67,\n  keyTrigger: 'C',\n  id: 'Snare',\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3'\n}];\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('app'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}